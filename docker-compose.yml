version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - .env
    command: >
      /bin/sh -c "
      until pg_isready -h db -U user -d messenger; do
        echo 'Waiting for PostgreSQL...';
        sleep 1;
      done;
      until redis-cli -h redis ping; do
        echo 'Waiting for Redis...';
        sleep 1;
      done;
      echo 'PostgreSQL and Redis are up!';
      alembic upgrade head;
      uvicorn app.main:app --host ${APP_HOST} --port ${APP_PORT}
      "
    volumes:
      - ./logs:/app/logs
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: messenger
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
  prometheus:
    image: prom/prometheus:v2.54.1
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
  redis-exporter:
    image: oliver006/redis_exporter:v1.62.0
    environment:
      - REDIS_ADDR=redis:6379
    ports:
      - "9121:9121"
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.15.0
    environment:
      - DATA_SOURCE_NAME=postgresql://user:password@db:5432/messenger?sslmode=disable
    ports:
      - "9187:9187"
  node-exporter:
    image: prom/node-exporter:v1.8.2
    ports:
      - "9100:9100"
  grafana:
    image: grafana/grafana:11.2.2
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
volumes:
  logs:
  grafana-data: